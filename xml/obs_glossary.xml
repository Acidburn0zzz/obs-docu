<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE glossary PUBLIC
  "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.docbook.org/xml/4.5/docbookx.dtd"
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- 
  ******* This is the official glossar of OBS terms                   ********
  ******* Please do not add new terms, if you are not sure that there ********
  ******* is a common aggrement on the meaning of this term           ********
  ******* Please post on the OBS mailing list your suggestion, if you ********
  ******* are unsure.                                                 ********
-->
<glossary>
 <title>Glossary</title>
 <glossentry id="obs.glos.obs"><glossterm>Open Build Service</glossterm>
  <glossdef>
   <para>
    The Open Build Service and its acronym OBS is used to speak about the
    server part of the build service. When speaking about OBS all possible
    instances are affected.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="obs.glos.build.o.o"><glossterm>openSUSE Build Service</glossterm>
  <glossdef>
   <para>
    The openSUSE Build Service is the concrete instance of
    <xref linkend="obs.glos.obs"/> from the openSUSE project at
    http://build.opensuse.org.
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>Appliance</glossterm>
  <glossdef>
   <para>
    A software appliance is a preconfigured combination of an application
    (for example, a Web server) and its configuration, and includes an
    operating system (for example, &sls;). All these parts are integrated
    into a single image and can be deployed on industry hardware or on a
    virtual environment.
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>EULA</glossterm>
  <glossdef>
   <para>
    End User License Agreement. For software that needs a special license
    (usually non-open source) which the user has to agree to before
    installing.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="obs.glos.kiwi"><glossterm>&kiwi;</glossterm>
  <glossdef>
   <para>
    &kiwi; provides a complete operating system image solution. It can
    create images for Linux supported hardware platforms or for
    virtualization systems.
   </para>
  </glossdef>
 </glossentry>
 <glossentry><glossterm>Overlay Files</glossterm>
  <glossdef>
   <para>
    Files which are created, removed, or modified in your testdrive are
    considered as <emphasis>overlay files</emphasis>. These files can be
    added later as a supplement to your appliance.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="obs.glos.project_binaries"><glossterm>Binaries</glossterm>
  <glossdef>
   <para>
    Binaries are considered as build results of OBS Projects. Binaries can
    be reused in an environment to build further binaries. Currently OBS is
    supporting rpm, deb and all formats generated by
    <xref linkend="obs.glos.kiwi"/>.
   </para>
  </glossdef>
 </glossentry>
<!-- maintenance stuff -->
 <glossentry id="obs.glos.ga_project"><glossterm>GA Project</glossterm>
  <glossdef>
   <para>
    The GA project builds an initial release of a product. It gets frozen
    after releasing the product. All further updates get released via the
    <xref linkend="obs.glos.update_project"/> of this project.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="obs.glos.update_project"><glossterm>Update Project</glossterm>
  <glossdef>
   <para>
    The update project is a <xref linkend="obs.glos.release_project"/> which
    provides official updates for the products generated in the
    <xref linkend="obs.glos.ga_project"/>. The Update project is usually
    linking (sources and repositories) against the
    <xref linkend="obs.glos.ga_project"/>.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="obs.glos.maintenance_project"><glossterm>Maintenance Project</glossterm>
  <glossdef>
   <para>
    The maintenance project is a project without sources and binaries,
    defined by the maintenance team. <xref linkend="obs.glos.incident"/>s
    are created as sub projects of this project.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="obs.glos.incident"><glossterm>Incident</glossterm>
  <glossdef>
   <para>
    The maintenance incident describes a concrete problem and the required
    updates. If the problem exists for multiple code streams, one incident
    covers all of them. An incident is started by creating a maintenance
    incident project and the update get built here.
   </para>
  </glossdef>
 </glossentry>
 <glossentry id="obs.glos.release_project"><glossterm>Release Project</glossterm>
  <glossdef>
   <para>
    A release project is hosting a release repository which is not building
    any packages ever. It is just used to copy sources and binaries to this
    project on a release event.
   </para>
  </glossdef>
 </glossentry>
</glossary>
